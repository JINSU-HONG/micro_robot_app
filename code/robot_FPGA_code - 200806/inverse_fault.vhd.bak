LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

--  Entity Declaration

ENTITY inverse_fault IS
	GENERIC
	(
	--	Cnt_max	: POSITIVE := 7500;	-- Cnt
		SIZE		: POSITIVE := 16	-- SIZE
	);
	PORT
	(	
		CLK, nRST	: IN STD_LOGIC;
		
		
	
		
		HWFAULT		: IN STD_LOGIC_VECTOR(SIZE-1 DOWNTO 0);
				
		--nINT_PWM : OUT STD_LOGIC;
		

		FAULT	: out STD_LOGIC_VECTOR(SIZE-1 DOWNTO 0);
		

	);
END inverse_fault;

--  Architecture Body


ARCHITECTURE BEHAVIOR_TEST OF inverse_fault IS 



--buff enable
	
	SIGNAL Fault_temp : std_logic_vector(SIZE-1 downto 0):= (OTHERS=>'0');
	
	

BEGIN
------------------------------------------------------------------------

-----------------------------------------------------------------------



-----------------------------------------------------
--buf_enable
------------------------------------------------
buf_enable:	process(nRST, CLK, HWFAULT)--, FAULT2) --BUF, FAULT)
	begin
		if(nRST='0')then
			Fault_temp <= "1111111111111111";
		elsif(CLK'EVENT AND CLK='1')then
			Fault_temp <= not HWFAULT;
	
		end if;
	end process;
	FAULT <= Fault_temp;


-- 12 gating signal required (NPC)

		
		

	

END BEHAVIOR_TEST;

